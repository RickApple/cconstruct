name: CI

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ${{ matrix.platform }}  # Use matrix to dynamically select platform

    strategy:
      matrix:
        platform: [windows-latest, macos-latest]  # Add macOS here
        # You can add more platforms later, such as ubuntu-latest.

    steps:
      - name: Checkout code (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # speeds up checkout by avoiding full history

      - name: Set up MSVC environment
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set up Xcode environment
        if: runner.os == 'macOS'
        run: |
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
          sudo xcodebuild -runFirstLaunch  # Setup Xcode tools if not already configured

      # Ref: https://chadgolden.com/blog/github-actions-hosted-windows-runners-slower-than-expected-ci-and-you
      - name: Install ImDisk Toolkit
        if: runner.os == 'Windows'
        run: |
          choco install imdisk-toolkit -y  # Install ImDisk via Chocolatey (use self-hosted runners for this)

      - name: Create RAM Disk
        if: runner.os == 'Windows'
        run: |
          imdisk -a -s 1G -m R: -p "/fs:ntfs /q"  # Creates 1GB RAM disk with NTFS formatting on R:

      - name: Run tests (Windows) on R
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          dir R:\

      - name: Run tests (Windows) on R
        if: runner.os == 'Windows'
        working-directory: R:\test
        shell: cmd
        run: |
          run_tests.bat
        
      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        working-directory: test
        shell: cmd
        run: |
          run_tests.bat
        
      - name: Run tests (MacOS)
        if: runner.os == 'macOS'
        working-directory: test
        shell: bash
        run: |
          ./run_tests.sh  # Assuming you have a bash script for macOS
